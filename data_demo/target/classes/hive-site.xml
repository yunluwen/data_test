<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&amp;useSSL=false</value>
    <description>JDBC connect string for a JDBC metastore</description>
  </property>
  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>com.mysql.jdbc.Driver</value>
    <description>Driver class name for a JDBC metastore</description>
  </property>
  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>root</value>
    <description>username to use against metastore database</description>
  </property>
  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>123456</value>
    <description>password to use against metastore database</description>
  </property>

  <property>
    <name>hive.metastore.schema.verification</name>
    <value>false</value>
    <description>
      Enforce metastore schema version consistency.
      True: Verify that version information stored in metastore matches with one from Hive jars.  Also disable automatic
      schema migration attempt. Users are required to manully migrate schema after Hive upgrade which ensures
      proper metastore schema migration. (Default)
      False: Warn if the version information stored in metastore doesn't match with one from in Hive jars.
    </description>
  </property>
  <property>
    <name>hive.server2.thrift.bind.host</name>
    <value>127.0.0.1</value>
  </property>
  <property>
    <name>hive.server2.thrift.port</name>
    <value>10000</value>
  </property>


<!--<property>-->
  <!--<name>hive.exec.local.scratchdir</name>-->
  <!--<value>/tmp/hive</value>-->
<!--</property>-->

<!--<property>-->
  <!--<name>hive.querylog.location</name>-->
  <!--<value>/tmp/hive</value>-->
<!--</property>-->

<!--<property>-->
  <!--<name>hive.downloaded.resources.dir</name>-->
  <!--<value>/tmp/hive</value>-->
<!--</property>-->

<!--<property>-->
  <!--<name>hive.server2.logging.operation.log.location</name>-->
  <!--<value>/tmp/hive</value>-->
<!--</property>-->

<!--自定义的hive hook函数,Driver.run()之前的preDriverRun()-->
<!--
<property>
  <name>hive.exec.driver.run.hooks</name>
  <value>com.zyh.hive.test.MyPreDriverRunHook</value>
  <description></description>
</property>
-->

<!--自定义的hive hook函数,语法分析前和语法分析后的配置-->
<!--
<property>  
  <name>hive.semantic.analyzer.hook</name>   
  <value>com.zyh.hive.test.MyHiveSemanticAnalyzerHook</value>     
  <description></description>
</property>
-->
<!--自定义的hive hook函数,生成执行计划之前的redactor钩子-->
<!--
<property>
  <name>hive.exec.query.redactor.hooks</name>
  <value>com.zyh.hive.test.MyRedactor</value>     
  <description></description>
</property>
-->

<!--自定义的hive hook函数，task执行之前的hook-->
<!--
<property>
  <name>hive.exec.pre.hooks</name>
  <value>com.zyh.hive.test.MyPreExecutionHook</value>
  <description></description>
</property>
-->
</configuration>
